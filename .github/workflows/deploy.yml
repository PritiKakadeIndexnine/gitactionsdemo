name: Build, Push Docker image to ECR, and Update ECS

on:
  push:
    branches: [ git-actions-demo ]

jobs:
  build-and-deploy:
    name: Build, Push Docker image to ECR, and Update ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Verify AWS CLI configuration
        run: aws sts get-caller-identity

      - name: Debugging Docker login
        run: |
          echo "Docker login output: ${{ steps.login-ecr.outputs }}"

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lesson-086
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing Docker image..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Debugging ECS update
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY: demo
          IMAGE_TAG: ${{ github.sha }}
          ECS_CLUSTER_NAME: upload_ECS
          ECS_SERVICE_NAME: web-service1
        run: |
          echo "Updating ECS service with image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment --region $AWS_REGION                                             
